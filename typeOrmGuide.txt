Two ways to configure TypeOrm with nest js:

1. pass config object in TypeOrm.forRoot() in app.moudles.js;
2. create a ormconfig.json file at root level and call TypeOrm.forRoot() in app.moudles.

##  one way

  These articles are great to have a look if you want to save some time.
    https://www.ronenagranat.com/2021-03-01/nestjs-typeorm-environment-config-migration.html
    https://dev.to/raphael_haecker/nestjs-and-typeorm-database-configuration-15ob


  Using config object in Module.forRoot() in app.moudles.js. This is feasiable when using different environments.
  Create a config file and export a typeOrm config object configured according to environment and use it in Module.forRoot() in 
  app.moudles.js.

  --Note: when using this approach, we will need to explicitly set the typeOrm.config.js/ts path in package.json file to run migrations.
    Example:
        line no: 30 is migration commands section will look like this.
          "typeorm": "node --require ts-node/register ./node_modules/typeorm/cli.js --config src/configs/typeorm.config.ts"


##  second way
  Using ormconfig.json config file at root location to configure database parameters along with entities and migrations paths.
    
    ## Example:
          "entities": ["dist/**/*.entity.js"],
          "migrations": ["dist/migrations/*.js"],
          "cli": {
            "migrationsDir": "src/migrations"
          }



## Migrations Section
## The command below will be added in package.json for migrations.

  "typeorm": "node --require ts-node/register ./node_modules/typeorm/cli.js",          // to locate typeorm in node_modules
  "migration:generate": "npm run build &&  npm run typeorm migration:generate -- -n", // to generate migration 
  "migration:run": "npm run build && npm run typeorm migration:run",                 //  to run migrations        
  "migration:revert":"npm run build && npm run typeorm migration:revert",           //   to revert migrations   


## Command to run migrations

  npm run migrations:generate  // to generate migration 
  npm run migrations:run      //  to run migrations
  npm run migrations:revert  //   to revert migrations